{
  "swagger": "2.0",
  "info": {
    "title": "controller.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "ControlService"
    },
    {
      "name": "Raft"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/executesql": {
      "post": {
        "operationId": "ControlService_ExecuteSQL",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiExecuteSQLRequest"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/peers": {
      "post": {
        "operationId": "ControlService_AddPeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAddPeerRequest"
            }
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/querysql": {
      "get": {
        "operationId": "ControlService_QuerySQL",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/apiQuerySQLResponse"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of apiQuerySQLResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "sql",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ControlService"
        ]
      }
    },
    "/api/v1/raft/check_health/{lagThreshold}": {
      "get": {
        "operationId": "Raft_CheckHealth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCheckHealthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "lagThreshold",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "Raft"
        ]
      }
    },
    "/api/v1/raft/highest_id": {
      "get": {
        "operationId": "Raft_HighestID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiHighestIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Raft"
        ]
      }
    },
    "/api/v1/raft/id": {
      "get": {
        "operationId": "Raft_GetID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetIDResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Raft"
        ]
      }
    },
    "/api/v1/raft/progress": {
      "get": {
        "operationId": "Raft_Progress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiProgressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Raft"
        ]
      }
    },
    "/api/v1/status": {
      "get": {
        "operationId": "ControlService_Status",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "ControlService"
        ]
      }
    }
  },
  "definitions": {
    "RowCell": {
      "type": "object",
      "properties": {
        "str": {
          "type": "string"
        },
        "by": {
          "type": "string",
          "format": "byte"
        },
        "i64": {
          "type": "string",
          "format": "int64"
        },
        "i32": {
          "type": "integer",
          "format": "int32"
        },
        "f64": {
          "type": "number",
          "format": "double"
        },
        "b": {
          "type": "boolean"
        },
        "ts": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "apiAddPeerRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "addr": {
          "type": "string"
        },
        "port": {
          "type": "string"
        }
      }
    },
    "apiCheckHealthResponse": {
      "type": "object",
      "properties": {
        "isLeader": {
          "type": "boolean"
        }
      }
    },
    "apiExecuteSQLRequest": {
      "type": "object",
      "properties": {
        "sql": {
          "type": "string"
        }
      }
    },
    "apiGetIDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiHighestIDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiNodeProgress": {
      "type": "object",
      "properties": {
        "match": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "apiProgressResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "state": {
          "type": "string"
        },
        "applied": {
          "type": "string",
          "format": "uint64"
        },
        "progressMap": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/apiNodeProgress"
          }
        }
      }
    },
    "apiQuerySQLResponse": {
      "type": "object",
      "properties": {
        "row": {
          "$ref": "#/definitions/apiRow"
        }
      }
    },
    "apiRow": {
      "type": "object",
      "properties": {
        "cells": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/RowCell"
          }
        }
      }
    },
    "apiStatusCode": {
      "type": "string",
      "enum": [
        "OK",
        "ERROR"
      ],
      "default": "OK"
    },
    "apiStatusResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/apiStatusCode"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "raftpbConfState": {
      "type": "object",
      "properties": {
        "voters": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "The voters in the incoming config. (If the configuration is not joint,\nthen the outgoing config is empty)."
        },
        "learners": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "The learners in the incoming config."
        },
        "votersOutgoing": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "The voters in the outgoing config."
        },
        "learnersNext": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "The nodes that will become learners when the outgoing config is removed.\nThese nodes are necessarily currently in nodes_joint (or they would have\nbeen added to the incoming config right away)."
        },
        "autoLeave": {
          "type": "boolean",
          "description": "If set, the config is joint and Raft will automatically transition into\nthe final config (i.e. remove the outgoing config) when this is safe."
        }
      }
    },
    "raftpbEntry": {
      "type": "object",
      "properties": {
        "Term": {
          "type": "string",
          "format": "uint64",
          "title": "must be 64-bit aligned for atomic operations"
        },
        "Index": {
          "type": "string",
          "format": "uint64",
          "title": "must be 64-bit aligned for atomic operations"
        },
        "Type": {
          "$ref": "#/definitions/raftpbEntryType"
        },
        "Data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "raftpbEntryType": {
      "type": "string",
      "enum": [
        "EntryNormal",
        "EntryConfChange",
        "EntryConfChangeV2"
      ],
      "default": "EntryNormal",
      "title": "- EntryConfChange: corresponds to pb.ConfChange\n - EntryConfChangeV2: corresponds to pb.ConfChangeV2"
    },
    "raftpbMessageType": {
      "type": "string",
      "enum": [
        "MsgHup",
        "MsgBeat",
        "MsgProp",
        "MsgApp",
        "MsgAppResp",
        "MsgVote",
        "MsgVoteResp",
        "MsgSnap",
        "MsgHeartbeat",
        "MsgHeartbeatResp",
        "MsgUnreachable",
        "MsgSnapStatus",
        "MsgCheckQuorum",
        "MsgTransferLeader",
        "MsgTimeoutNow",
        "MsgReadIndex",
        "MsgReadIndexResp",
        "MsgPreVote",
        "MsgPreVoteResp"
      ],
      "default": "MsgHup",
      "title": "For description of different message types, see:\nhttps://pkg.go.dev/go.etcd.io/etcd/raft/v3#hdr-MessageType"
    },
    "raftpbSnapshot": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "format": "byte"
        },
        "metadata": {
          "$ref": "#/definitions/raftpbSnapshotMetadata"
        }
      }
    },
    "raftpbSnapshotMetadata": {
      "type": "object",
      "properties": {
        "confState": {
          "$ref": "#/definitions/raftpbConfState"
        },
        "index": {
          "type": "string",
          "format": "uint64"
        },
        "term": {
          "type": "string",
          "format": "uint64"
        }
      }
    }
  }
}
