---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "deeb.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deeb.labels" . | nindent 4 }}
spec:
  serviceName: {{ template "deeb.fullname" . }}
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.replicas }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "deeb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "deeb.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
      - command:
        - rm
        - -fr
        - /var/lib/mysql/lost+found
        image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
        imagePullPolicy: {{ .Values.initImage.pullPolicy | quote }}
        name: remove-lost-found
        resources:
{{ toYaml .Values.initResources | indent 10 }}
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data
      containers:
      - name: {{ template "deeb.fullname" . }}
        image: "{{ .Values.mysqlImage }}:{{ .Values.mysqlImageTag }}"
        imagePullPolicy: {{ .Values.mysqlImagePullPolicy | quote }}
        resources:
{{ toYaml .Values.mysqlResources | indent 10 }}
        env:
        {{- if .Values.mysqlAllowEmptyPassword }}
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        {{- else }}
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "deeb.fullname" . }}
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "deeb.fullname" . }}
              key: mysql-password
        {{- end }}
        - name: MYSQL_USER
          value: {{ default "" .Values.mysqlUser | quote }}
        - name: MYSQL_DATABASE
          value: {{ default "" .Values.mysqlDatabase | quote }}
        ports:
        - containerPort: 3306
          name: mysql
          protocol: TCP
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        - name: configurations
          mountPath: /etc/my.cnf.d/repl.cnf
          subPath: repl.cnf
      - name: {{ template "deeb.fullname" . }}-sidecar
        image: "{{ .Values.sidecarImage }}:{{ .Values.sidecarImageTag }}"
        imagePullPolicy: {{ .Values.sidecarImagePullPolicy | quote }}
        resources:
{{ toYaml .Values.sidecarResources | indent 10 }}
        ports:
        - containerPort: 22
          name: ssh
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data
        - mountPath: /var/secrets
          name: ssh-keys
        - mountPath: /etc/my.cnf.d/repl.cnf
          name: configurations
          subPath: repl.cnf
      - name: {{ template "deeb.fullname" . }}-controller
        image: "{{ .Values.controllerImage }}:{{ .Values.controllerImageTag }}"
        imagePullPolicy: {{ .Values.controllerImagePullPolicy | quote }}
        resources:
{{ toYaml .Values.controllerResources | indent 10 }}
        ports:
        - containerPort: 10000
          name: grpc
          protocol: TCP
        - containerPort: 11000
          name: grpcgw
          protocol: TCP
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: {{ template "deeb.fullname" . }}
        volumeMounts:
        - mountPath: /var/secrets
          name: ssh-keys
        - mountPath: /var/lib/mysql
          name: data
        livenessProbe:
          exec:
            command:
            - curl
            - "--insecure"
            - "-X"
            - "GET"
            - "https://localhost:11000/api/v1/status"
            - "-H"
            - "accept: application/json"
          failureThreshold: 3
          successThreshold: 1
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - curl
            - "--insecure"
            - "-X"
            - "GET"
            - "https://localhost:11000/api/v1/raft/check_health/{{ .Values.indexLagThreshold }}"
            - "-H"
            - "accept: application/json"
          failureThreshold: 3
          successThreshold: 1
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: configurations
        configMap:
          name: {{ template "deeb.fullname" . }}-mysql-config
      - name: ssh-keys
        secret:
          secretName: {{ template "deeb.fullname" . }}-{{ .Values.sidecarSecretName }}
          items:
          - key: id_rsa
            mode: 0400
            path: id_rsa
          - key: id_rsa.pub
            path: id_rsa.pub
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "deeb.labels" $ | nindent 8 }}
    spec:
      accessModes:
      - {{ $.Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ $.Values.persistence.size | quote }}
    {{- if $.Values.persistence.storageClass }}
    {{- if (eq "-" $.Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ $.Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
