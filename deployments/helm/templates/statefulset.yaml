---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "deeb.fullname" . }}
  labels:
    {{- include "deeb.labels" . | nindent 4 }}
spec:
  serviceName: {{ template "deeb.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "deeb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "deeb.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
      {{- end }}
      initContainers:
      - name: "remove-lost-found"
        image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
        imagePullPolicy: {{ .Values.initImage.pullPolicy | quote }}
        resources:
{{ toYaml .Values.initResources | indent 10 }}
        command:
        - "rm"
        - "-fr"
        - "/var/lib/mysql/lost+found"
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      containers:
      - name: {{ template "deeb.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        {{- if .Values.mysqlAllowEmptyPassword }}
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        {{- else }}
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "deeb.fullname" . }}
              key: mysql-root-password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "deeb.fullname" . }}
              key: mysql-password
        {{- end }}
        - name: MYSQL_USER
          value: {{ default "" .Values.mysqlUser | quote }}
        - name: MYSQL_DATABASE
          value: {{ default "" .Values.mysqlDatabase | quote }}
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mysqladmin
            - ping
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        {{- if .Values.configurationFiles }}
        {{- range $key, $val := .Values.configurationFiles }}
        - name: configurations
          mountPath: {{ $.Values.configurationFilesPath }}{{ $key }}
          subPath: {{ $key }}
        {{- end -}}
        {{- end }}
      - name: {{ template "deeb.fullname" . }}-sidecar
        image: "{{ .Values.sidecarImage }}:{{ .Values.sidecarImageTag }}"
        imagePullPolicy: {{ .Values.sidecarImagePullPolicy | quote }}
        resources:
{{ toYaml .Values.sidecarResources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
        - name: ssh-keys
          mountPath: "/var/secrets"
        ports:
        - name: ssh
          containerPort: 22
      volumes:
      {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- end -}}
      {{- if .Values.configurationFiles }}
      - name: configurations
        configMap:
          name: {{ template "deeb.fullname" . }}-configuration
      {{- end }}
      - name: ssh-keys
        secret:
          secretName: {{ .Values.sidecarSecretName | quote }}
          items:
          - key: id_rsa
            path: id_rsa
            mode: 0400
          - key: id_rsa.pub
            path: id_rsa.pub
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end -}}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        {{- include "deeb.labels" $ | nindent 8 }}
    spec:
      accessModes:
        - {{ $.Values.persistence.accessMode | quote }}
      resources:
        requests:
          storage: {{ $.Values.persistence.size | quote }}
    {{- if $.Values.persistence.storageClass }}
    {{- if (eq "-" $.Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: "{{ $.Values.persistence.storageClass }}"
    {{- end }}
    {{- end }}
{{- end }}
